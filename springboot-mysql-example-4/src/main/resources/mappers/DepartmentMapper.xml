<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springbootmysqlexample4.dao.DepartmentMapper">

    <resultMap id="BaseResultMap" type="com.example.springbootmysqlexample4.entity.Department">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="location" jdbcType="VARCHAR" property="location"/>
    </resultMap>


    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select `id`, `name`, `location`
        from department
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select `id`, `name`, `location`
        from department
    </select>

    <delete id="deleteById" parameterType="java.lang.Long">
        delete from department
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="com.example.springbootmysqlexample4.entity.Department"
            useGeneratedKeys="true">
        insert into department (`name`, `location`)
        values (#{name,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR})
    </insert>
    <update id="update" parameterType="com.example.springbootmysqlexample4.entity.Department">
        update department
        set `name` = #{name,jdbcType=VARCHAR},
        `location` = #{location,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>

</mapper>
